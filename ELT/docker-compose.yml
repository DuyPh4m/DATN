version: '3.8'

services:
  zookeeper:
      container_name: zookeeper
      image: bitnami/zookeeper:latest
      ports:
        - "2181:2181"
      environment:
        - ALLOW_ANONYMOUS_LOGIN=yes
      deploy:
        resources:
          limits:
            cpus: '0.5'
            memory: 512M

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,OUTSIDE://localhost:9093
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    depends_on:
      zookeeper:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: '2.25'
          memory: 1G

  spark-master:
    container_name: spark-master
    image: bitnami/spark:latest
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_EVENTLOG_ENABLED=true
    volumes:
      - ./spark:/app
      - ./.ivy2:/opt/bitnami/spark/.ivy2
    deploy:
      resources:
        limits:
          cpus: '2.5'
          memory: 2G

  spark-worker1:
    container_name: spark-worker1
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    volumes:
      - ./spark:/app
      - ./.ivy2:/opt/bitnami/spark/.ivy2
    deploy:
      resources:
        limits:
          cpus: '2.5'
          memory: 1.5G

  spark-worker2:
    container_name: spark-worker2
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    volumes:
      - ./spark:/app
      - ./.ivy2:/opt/bitnami/spark/.ivy2
    deploy:
      resources:
        limits:
          cpus: '2.5'
          memory: 1.5G  
  cassandra:
    container_name: cassandra
    image: cassandra:latest
    ports:
      - "7000:7000"
      - "9042:9042"
    environment:
      - CASSANDRA_SEEDS=cassandra
      - CASSANDRA_CLUSTER_NAME=cassandraCluster
    volumes:
      - ./cassandra:/app
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 5G
networks:
  default:
    driver: bridge